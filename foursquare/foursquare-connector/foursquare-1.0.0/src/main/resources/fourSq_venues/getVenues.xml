<?xml version="1.0" encoding="UTF-8"?>
<template xmlns="http://ws.apache.org/ns/synapse" name="getVenues">



    <parameter name="near" description=" A string naming a place in the world. If the near string is not geocodable, returns a failed_geocode error"/>
    <parameter name="ll" description="Latitude and longitude, in meters"/>

    <!--optional parameters-->
    <parameter name="llAcc" description="Accuracy of latitude and longitude, in meters"/>
    <parameter name="alt" description="Altitude of the user's location, in meters"/>
    <parameter name="altAcc" description="Accuracy of the user's altitude, in meters"/>
    <parameter name="radius" description="Radius to search within, in meters"/>
    <parameter name="section"/>
    <parameter name="query" description="A term to be searched against a venue's tips, category, etc"/>
    <parameter name="limit" description="Number of results to return, up to 50"/>
    <parameter name="intent" description="Limit results to venues with specials."/>
    <parameter name="novelty" description="Pass new or old to limit results to places the acting user hasn't been or has been, respectively"/>



    <sequence>
        <property name="HTTP_METHOD" value="GET" scope="axis2" type="STRING"/>
        <property name="Accept-Encoding" scope="transport" action="remove"/>
        <property name="messageType" value="application/json" scope="axis2" type="STRING"/>
        <property name="uri.var.ll" expression="$func:ll" scope="default" />

<!--optional parameters -->
        <property name="uri.var.radius" expression="$func:radius" scope="default"/>
        <property name="uri.var.near" expression="$func:near" scope="default" type="STRING"/>
        <property name="uri.var.llAcc" expression="$func:llAcc" scope="default" />
        <property name="uri.var.alt" expression="$func:alt" scope="default"/>
        <property name="uri.var.altAcc" expression="$func:altAcc" scope="default"/>
        <property name="uri.var.section" expression="$func:section" scope="default"/>
        <property name="uri.var.query" expression="$func:query" scope="default"/>
        <property name="uri.var.limit" expression="$func:limit" scope="default" />
        <property name="uri.var.novelty" expression="$func:novelty" scope="default"/>
        <property name="uri.var.intent" expression="$func:intent" scope="default"/>
        <property name="parameters" expression="fn:concat('&amp;ll=',get-property('uri.var.ll'),'&amp;radius=',get-property('uri.var.radius'))" />



        <!--adding optional parameters -->


        <filter xpath="get-property('uri.var.llAcc') = '' or not(string(get-property('uri.var.llAcc')))">
            <then>
                <property name="uri.var.llAcc" value="" />
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;llAcc=', get-property('uri.var.llAcc'))" />
            </else>
        </filter>

        <filter xpath="get-property('uri.var.alt') = '' or not(string(get-property('uri.var.alt')))">
            <then>
                <property name="uri.var.alt" value="" />
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;alt=', get-property('uri.var.alt'))" />
            </else>
        </filter>

        <filter xpath="get-property('uri.var.altAcc') = '' or not(string(get-property('uri.var.altAcc')))">
            <then>
                <property name="uri.var.altAcc" value="" />
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;altAcc=', get-property('uri.var.altAcc'))" />
            </else>
        </filter>

      <!-- <filter xpath="get-property('uri.var.radius') = '' or not(string(get-property('uri.var.radius')))">
            <then>
                <property name="uri.var.radius" value="" />
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;radius=', get-property('uri.var.radius'))" />
            </else>
        </filter>-->

        <filter xpath="get-property('uri.var.near') = '' or not(string(get-property('uri.var.near')))">
            <then>
                <property name="uri.var.near" value="" />
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;near=', get-property('uri.var.near'))" />
            </else>
        </filter>

        <filter xpath="get-property('uri.var.section') = '' or not(string(get-property('uri.var.section')))">
            <then>
                <property name="uri.var.section" value="" />
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;section=', get-property('uri.var.section'))" />
            </else>
        </filter>

        <filter xpath="get-property('uri.var.query') = '' or not(string(get-property('uri.var.query')))">
            <then>
                <property name="uri.var.query" value="" />
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;query=', get-property('uri.var.query'))" />
            </else>
        </filter>

        <filter xpath="get-property('uri.var.limit') = '' or not(string(get-property('uri.var.limit')))">
            <then>
                <property name="uri.var.limit" value="" />
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;limit=', get-property('uri.var.limit'))" />
            </else>
        </filter>
        <filter xpath="get-property('uri.var.intent') = '' or not(string(get-property('uri.var.intent')))">
            <then>
                <property name="uri.var.intent" value="" />
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;intent=', get-property('uri.var.intent'))" />
            </else>
        </filter>



        <filter xpath="get-property('uri.var.novelty') = 'new' or get-property('uri.var.novelty') = 'old'">
            <then>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;novelty=', get-property('uri.var.novelty'))" />

            </then>
            <else>
                <property name="uri.var.novelty" value="" />
            </else>
        </filter>



        <payloadFactory media-type="xml">
            <format>
                <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                    <soapenv:Header/>
                    <soapenv:Body/>
                </soapenv:Envelope>
            </format>
            <args/>
        </payloadFactory>
        <property name="messageType" value="application/json" scope="axis2" />
        <call>
            <endpoint>
                <http method="GET"
                      uri-template="{uri.var.foursquare.apiUrl}/v2/venues/explore?v=20140626{uri.var.parameters}&amp;oauth_token={uri.var.foursquare.accessToken}" />
            </endpoint>
        </call>
    </sequence>


        </template>