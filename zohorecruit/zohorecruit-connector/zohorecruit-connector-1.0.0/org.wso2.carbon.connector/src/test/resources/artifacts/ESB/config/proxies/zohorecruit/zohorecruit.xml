<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="zohorecruit"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
   <target>
      <inSequence>
        <property name="apiUrl" expression="json-eval($.apiUrl)" />
		<property name="authToken" expression="json-eval($.authToken)" />
		<property name="module" expression="json-eval($.module)" />
		<property name="scope" expression="json-eval($.scope)" />
		<property name="responseFormat" expression="json-eval($.responseFormat)" />
		<property name="xmlData" expression="json-eval($.xmlData)" />
		<property name="duplicateCheck" expression="json-eval($.duplicateCheck)" />
		<property name="emailAlert" expression="json-eval($.emailAlert)" />
		<property name="id" expression="json-eval($.id)" />
		<property name="fromIndex" expression="json-eval($.fromIndex)" />
		<property name="toIndex" expression="json-eval($.toIndex)" />
		<property name="sortColumnString" expression="json-eval($.sortColumnString)" />
		<property name="sortOrderString" expression="json-eval($.sortOrderString)" />
		<property name="searchCondition" expression="json-eval($.searchCondition)" />
		<property name="selectColumns" expression="json-eval($.selectColumns)" />
		<property name="jobId" expression="json-eval($.jobId)" />
		<property name="candidateIds" expression="json-eval($.candidateIds)" />
		<property name="candidateStatus" expression="json-eval($.candidateStatus)" />
		<property name="comments" expression="json-eval($.comments)" />
        <zohorecruit.init>
			<apiUrl>{$ctx:apiUrl}</apiUrl>
			<authToken>{$ctx:authToken}</authToken>
			<scope>{$ctx:scope}</scope>
			<responseFormat>{$ctx:responseFormat}</responseFormat>
		</zohorecruit.init>
        <switch source="get-property('transport','Action')">
            <case regex="urn:addRecords">
               <zohorecruit.addRecords>
			       <module>{$ctx:module}</module>
				   <xmlData>{$ctx:xmlData}</xmlData>
				   <duplicateCheck>{$ctx:duplicateCheck}</duplicateCheck>
				   <emailAlert>{$ctx:emailAlert}</emailAlert>
			   </zohorecruit.addRecords>
            </case>
            <case regex="urn:updateRecords">
               <zohorecruit.updateRecords>
			      <module>{$ctx:module}</module>
				  <id>{$ctx:id}</id>
				  <xmlData>{$ctx:xmlData}</xmlData>
			   </zohorecruit.updateRecords>
            </case>
            <case regex="urn:getRecords">
               <zohorecruit.getRecords>
			      <module>{$ctx:module}</module>
				  <fromIndex>{$ctx:fromIndex}</fromIndex>
				  <toIndex>{$ctx:toIndex}</toIndex>
				  <sortColumnString>{$ctx:sortColumnString}</sortColumnString>
				  <sortOrderString>{$ctx:sortOrderString}</sortOrderString>
				  <searchCondition>{$ctx:searchCondition}</searchCondition>
				  <selectColumns>{$ctx:selectColumns}</selectColumns>
			   </zohorecruit.getRecords>
            </case>            
            <case regex="urn:getRecordById">
               <zohorecruit.getRecordById>
			      <module>{$ctx:module}</module>
				  <id>{$ctx:id}</id>
				  <selectColumns>{$ctx:selectColumns}</selectColumns>
			   </zohorecruit.getRecordById>
            </case>
            <case regex="urn:changeStatus">
               <zohorecruit.changeStatus>
				  <jobId>{$ctx:jobId}</jobId>
				  <candidateIds>{$ctx:candidateIds}</candidateIds>
				  <candidateStatus>{$ctx:candidateStatus}</candidateStatus>
				  <comments>{$ctx:comments}</comments>
			   </zohorecruit.changeStatus>
            </case>
			<case regex="urn:associateJobOpening">
               <zohorecruit.associateJobOpening>
				  <jobId>{$ctx:jobId}</jobId>
				  <candidateIds>{$ctx:candidateIds}</candidateIds>
			   </zohorecruit.associateJobOpening>
            </case>
			<case regex="urn:getAssociatedCandidates">
               <zohorecruit.getAssociatedCandidates>
				  <jobId>{$ctx:jobId}</jobId>
			   </zohorecruit.getAssociatedCandidates>
            </case>
         </switch>
         <respond/>
      </inSequence>
      <outSequence>
         <log/>
         <send/>
      </outSequence>
   </target>
   <description/>
</proxy>