<template name="getStore" xmlns="http://ws.apache.org/ns/synapse">
	<parameter name="categoryStructureOnly" description="Information about the category hierarchy only." />
	<parameter name="levelLimit" description="Number of levels of the category hierarchy." />
	<parameter name="rootCategoryId" description="Specifies the category ID for the topmost category." />
	<parameter name="userId" description="Specifies the user whose store data is to be returned." />
	
	<sequence>
		<property name="uri.var.categoryStructureOnly" expression="$func:categoryStructureOnly" />
		<property name="uri.var.rootCategoryId" expression="$func:rootCategoryId" />
		<property name="uri.var.levelLimit" expression="$func:levelLimit" />
		<property name="uri.var.userId" expression="$func:userId" />

		<payloadFactory media-type="xml">
			<format>
				<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ebl="urn:ebay:apis:eBLBaseComponents">
					<soapenv:Header>
						<ebl:RequesterCredentials>
							<ebl:eBayAuthToken>$1</ebl:eBayAuthToken>
						</ebl:RequesterCredentials>
					</soapenv:Header>
					<soapenv:Body>
						<ebl:GetStoreRequest>
							<ebl:Version>$2</ebl:Version>
						</ebl:GetStoreRequest>
					</soapenv:Body>
				</soapenv:Envelope>
			</format>

			<args>
				<arg expression="get-property('uri.var.authToken')" />
				<arg expression="get-property('uri.var.version')" />
			</args>

		</payloadFactory>

		<script language="js">
			<![CDATA[
			
				//request body param variables
		        var errorLanguage = mc.getProperty('uri.var.errorLanguage'); 
				var messageId = mc.getProperty('uri.var.messageId'); 
				var warningLevel = mc.getProperty('uri.var.warningLevel');
				var categoryStructureOnly = mc.getProperty('uri.var.categoryStructureOnly');
				var rootCategoryId = mc.getProperty('uri.var.rootCategoryId');
				var levelLimit = mc.getProperty('uri.var.levelLimit'); 
				var userId = mc.getProperty('uri.var.userId'); 
				   
				var payload = mc.getPayloadXML();
				
				if (errorLanguage != null && errorLanguage != "") { 
					payload.GetStoreRequest += <ebl:ErrorLanguage xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{errorLanguage}</ebl:ErrorLanguage>; 
				}
				
				if (messageId != null && messageId != "") { 
					payload.GetStoreRequest += <ebl:MessageID xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{messageId}</ebl:MessageID>; 
				}
				
				if (warningLevel != null && warningLevel != "") { 
					payload.GetStoreRequest += <ebl:WarningLevel xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{warningLevel}</ebl:WarningLevel>; 
				}
				
				if (categoryStructureOnly != null && categoryStructureOnly != "") { 
					payload.GetStoreRequest += <ebl:CategoryStructureOnly xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{categoryStructureOnly}</ebl:CategoryStructureOnly>; 
				}
				
				if (rootCategoryId != null && rootCategoryId != "") { 
					payload.GetStoreRequest += <ebl:RootCategoryID xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{rootCategoryId}</ebl:RootCategoryID>; 
				}
				
				if (levelLimit != null && levelLimit != "") {
				 payload.GetStoreRequest += <ebl:LevelLimit xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{levelLimit}</ebl:LevelLimit>;  
				} 
				
				if (userId != null && userId != "") {
				 payload.GetStoreRequest += <ebl:UserID xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{userId}</ebl:UserID>;  
				} 
							
				mc.setPayloadXML(payload);
				
			]]>
		</script>

		<property name="uri.var.endpoint" expression="fn:concat(get-property('uri.var.apiUrl'), '?')" />
		<property name="uri.var.endpoint" expression="fn:concat(get-property('uri.var.endpoint'), 'callname=GetStore')" />
		<property name="uri.var.endpoint" expression="fn:concat(get-property('uri.var.endpoint'), '&amp;siteid=', get-property('uri.var.siteId'))" />
		<property name="uri.var.endpoint" expression="fn:concat(get-property('uri.var.endpoint'), '&amp;appid=', get-property('uri.var.appId'))" />
		<property name="uri.var.endpoint" expression="fn:concat(get-property('uri.var.endpoint'), '&amp;version=', get-property('uri.var.version'))" />
		<property name="uri.var.endpoint" expression="fn:concat(get-property('uri.var.endpoint'), '&amp;routing=', get-property('uri.var.routing'))" />

		<header name="To" expression="get-property('uri.var.endpoint')" />
		
		<header name="Action" value="GetStore" />

		<call>
			<endpoint>
				<default format="soap11" />
			</endpoint>
		</call>

		<!-- Remove custom header information in response -->
		<header name="X-EBAY-API-SERVER-NAME" scope="transport" action="remove" />
		<header name="X-EBAY-ESB-CALL-NAME" scope="transport" action="remove" />
		<header name="X-EBAY-ESB-GUID" scope="transport" action="remove" />
		<header name="X-EBAY-ESB-SITEID" scope="transport" action="remove" />

	</sequence>
</template>