<template name="getAdFortmatLeads" xmlns="http://ws.apache.org/ns/synapse">
  <parameter name="detailLevel" description="Specify the required detail level that the client application needs."/>
  <parameter name="outputSelector" description="Output data selector."/>
  <parameter name="itemId" description="The unique identifier of the item listing."/>
  <parameter name="status" description="Status of the lead."/>
  <parameter name="includeMemberMessages" description="Return mail messages for this lead."/>
  <parameter name="startCreationTime" description="Start time of the lead created."/>
  <parameter name="endCreationTime" description="End time of the lead created."/>
  
  
  <sequence>
    <property name="uri.var.detailLevel" expression="$func:detailLevel"/>
    <property name="uri.var.outputSelector" expression="$func:outputSelector"/>
    <property name="uri.var.itemId" expression="$func:itemId"/>
    <property name="uri.var.status" expression="$func:status"/>
    <property name="uri.var.includeMemberMessages" expression="$func:includeMemberMessages"/>
    <property name="uri.var.startCreationTime" expression="$func:startCreationTime"/>
    <property name="uri.var.endCreationTime" expression="$func:endCreationTime"/>
    
   	<payloadFactory media-type="xml">
			<format>
				<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ebl="urn:ebay:apis:eBLBaseComponents">
				   <soapenv:Header>
				      <ebl:RequesterCredentials>
							<ebl:eBayAuthToken>$1</ebl:eBayAuthToken>
					  </ebl:RequesterCredentials>
				   </soapenv:Header>
				   <soapenv:Body>
				      <ebl:GetAdFormatLeadsRequest>
				         <ebl:Version>$2</ebl:Version>
				      </ebl:GetAdFormatLeadsRequest>
				   </soapenv:Body>
				</soapenv:Envelope>​​
			</format>
			<args>
				<arg expression="get-property('uri.var.authToken')" />
				<arg expression="get-property('uri.var.version')" />
			</args>
	</payloadFactory>
	
	<script language="js">
			<![CDATA[
			  
				//request body param variables
		        var detailLevel = mc.getProperty('uri.var.detailLevel'); 
		        var errorLanguage = mc.getProperty('uri.var.errorLanguage'); 
				var messageId = mc.getProperty('uri.var.messageId'); 
				var outputSelector = mc.getProperty('uri.var.outputSelector'); 
				var warningLevel = mc.getProperty('uri.var.warningLevel');
				var itemId = mc.getProperty('uri.var.itemId');
				var status = mc.getProperty('uri.var.status');
				var includeMemberMessages = mc.getProperty('uri.var.includeMemberMessages');
				var startCreationTime = mc.getProperty('uri.var.startCreationTime');
				var endCreationTime = mc.getProperty('uri.var.endCreationTime');
				   
				var payload = mc.getPayloadXML();
				
				if (detailLevel != null && detailLevel != "") { 
					payload.GetAdFormatLeadsRequest += <ebl:DetailLevel xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{detailLevel}</ebl:DetailLevel>; 
				}
				
				if (errorLanguage != null && errorLanguage != "") { 
					payload.GetAdFormatLeadsRequest += <ebl:ErrorLanguage xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{errorLanguage}</ebl:ErrorLanguage>; 
				}
				
				if (messageId != null && messageId != "") { 
					payload.GetAdFormatLeadsRequest += <ebl:MessageID xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{messageId}</ebl:MessageID>; 
				}
				
				if (outputSelector != null && outputSelector != "") { 
					payload.GetAdFormatLeadsRequest += <ebl:OutputSelector xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{outputSelector}</ebl:OutputSelector>; 
				}
				
				if (warningLevel != null && warningLevel != "") { 
					payload.GetAdFormatLeadsRequest += <ebl:WarningLevel xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{warningLevel}</ebl:WarningLevel>; 
				}
				
				if (itemId != null && itemId != "") { 
					payload.GetAdFormatLeadsRequest += <ebl:ItemID xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{itemId}</ebl:ItemID>; 
				}
				
				if (status != null && status != "") { 
					payload.GetAdFormatLeadsRequest += <ebl:Status xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{status}</ebl:Status>; 
				}
				
				if (includeMemberMessages != null && includeMemberMessages != "") { 
					payload.GetAdFormatLeadsRequest += <ebl:IncludeMemberMessages xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{includeMemberMessages}</ebl:IncludeMemberMessages>; 
				}
				
				if (startCreationTime != null && startCreationTime != "") { 
					payload.GetAdFormatLeadsRequest += <ebl:StartCreationTime xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{startCreationTime}</ebl:StartCreationTime>; 
				}
				
				if (endCreationTime != null && endCreationTime != "") { 
					payload.GetAdFormatLeadsRequest += <ebl:EndCreationTime xmlns:ebl="urn:ebay:apis:eBLBaseComponents">{endCreationTime}</ebl:EndCreationTime>; 
				}
				
				mc.setPayloadXML(payload);
				
			]]>
		</script>
		
		
		<property name="uri.var.endpoint" expression="fn:concat(get-property('uri.var.apiUrl'), '?')" />
		<property name="uri.var.endpoint" expression="fn:concat(get-property('uri.var.endpoint'), 'callname=GetAdFormatLeads')" />
		<property name="uri.var.endpoint" expression="fn:concat(get-property('uri.var.endpoint'), '&amp;siteid=', get-property('uri.var.siteId'))" />
		<property name="uri.var.endpoint" expression="fn:concat(get-property('uri.var.endpoint'), '&amp;appid=', get-property('uri.var.appId'))" />
		<property name="uri.var.endpoint" expression="fn:concat(get-property('uri.var.endpoint'), '&amp;version=', get-property('uri.var.version'))" />
		<property name="uri.var.endpoint" expression="fn:concat(get-property('uri.var.endpoint'), '&amp;routing=', get-property('uri.var.routing'))" />

		<header name="To" expression="get-property('uri.var.endpoint')" />
		
		<header name="Action" value="GetAdFormatLeads" />
		
		<property name="messageType" value="text/xml" scope="axis2" />

		<call>
			<endpoint>
				<default format="soap11" />
			</endpoint>
		</call>
   
		<!-- Remove custom header information in response -->
		<header name="X-EBAY-ESB-SITEID" scope="transport" action="remove" />
		<header name="X-EBAY-ESB-CALL-NAME" scope="transport" action="remove" />
		<header name="X-EBAY-ESB-GUID" scope="transport" action="remove" />
		<header name="X-EBAY-API-SERVER-NAME" scope="transport" action="remove" />
   
  </sequence>
</template>